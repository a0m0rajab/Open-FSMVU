{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Main Summary: This project aim to provide the materials and lessons that taught at Fatish sultan mehmet university to those who can't offer studying on it or who wants to get view on it's education system. why this project? it will help any student in the world to learn computer engineering online. it provides the basic information about Computer Engineering major for those who have not read or know about it before. provide an interactive learning atmosphere between instructors and student by making everything clear to them. Fatih Sultan Mehmet University FSMVU is a university based in Tukrey teaches a few Majors like Computer Engineering and Biyomedical Engineering. How to use this Guide This Guide made to show the Curriculum of Computer engineering major in the university and how to study it online , Extra files can be found to show the homeworks and Lessons materials. How to contribute: If you want to contribute and create your own version of the guide with your experience you can fork this guide, and change the needed part for that. If you wanted to fix something from this guide you can open an issue or even pull request it to this guide. To Do list : Online moocs that can help first semester lessons second semester compleete lessons . third semester compleete lessons . forth semester compleete lessons . information about university Why its useful to read it . how to use this repo how can you it help where are our students PreRequirenment","title":"Home"},{"location":"#main","text":"","title":"Main"},{"location":"#summary","text":"This project aim to provide the materials and lessons that taught at Fatish sultan mehmet university to those who can't offer studying on it or who wants to get view on it's education system.","title":"Summary:"},{"location":"#why-this-project","text":"it will help any student in the world to learn computer engineering online. it provides the basic information about Computer Engineering major for those who have not read or know about it before. provide an interactive learning atmosphere between instructors and student by making everything clear to them.","title":"why this project?"},{"location":"#fatih-sultan-mehmet-university","text":"FSMVU is a university based in Tukrey teaches a few Majors like Computer Engineering and Biyomedical Engineering.","title":"Fatih Sultan Mehmet University"},{"location":"#how-to-use-this-guide","text":"This Guide made to show the Curriculum of Computer engineering major in the university and how to study it online , Extra files can be found to show the homeworks and Lessons materials.","title":"How to use this Guide"},{"location":"#how-to-contribute","text":"If you want to contribute and create your own version of the guide with your experience you can fork this guide, and change the needed part for that. If you wanted to fix something from this guide you can open an issue or even pull request it to this guide.","title":"How to contribute:"},{"location":"#to-do-list","text":"Online moocs that can help first semester lessons second semester compleete lessons . third semester compleete lessons . forth semester compleete lessons . information about university Why its useful to read it . how to use this repo how can you it help where are our students PreRequirenment","title":"To Do list :"},{"location":"Courses_outline/","text":"Outline Computer Engineering is a four year practical program. First year In the first year you learn the basic programming syntax and Main university courses related to engineering like Mathematics . First semester Lesson Name brief info Programming Languages 1 Basic JAVA language Physic 1 Serway 1 Mathematics 1 calculus 1 introduction to computer engineering brief history about computing and Computer engineering major ataturk\u2019s principles and history of turkish revolution Brief introduction to the history of turkye Turkish language Turkish language basics and grammer Advanced English English langauge for engineering Second semester Lesson Name brief info Programming Languages 2 Intro to DataBase SQL and GUI with JAVA Physic 2 serway 2 Mathematics 2 calculus 2 Advanced English II English langauge for engineering ataturk\u2019s principles and history of turkish revolution II Brief introduction to the history of turkye Turkish language II Turkish language basics and grammer Linear Algebra introduction to linear algebra Second year Third semester Lesson Name brief info Discrete Structures Design Softwares An introduction to LabView program Digital Systems to-fill-soon Electric Circuits to-fill-soon Programming Languages III Numerical methods differential equations Forth semester Lesson Name brief info Statistics and Probability Data Structures to-fill-soon Oral and Written Communication in Engineering to-fill-soon Microprocessors systems Python Programing Language Electronic Circuits to-fill-soon Third year Fifth semester Lesson Name brief info Summer internship Operating systmes Database Managing systems Advanced programming Algorithm Analysis & Design Computer Ethics and laws Sixth semester Lesson Name brief info human computer interaction visualization Entrepreneurship and Innovation II computer architecture and organization Computer networks Software Engineering Formal Languages and Automata Theory Fourth year seventh semester Lesson Name brief info Web Design and Programming Software Project Management System Programming Quality Management Entrepreneurship and Innovation Final project - Thesis Eighth semester Lesson Name brief info Introduction to Data Mining Introduction to Machine Learning Introduction to Data Science Engineering Management Introduction to History of the Science and technology Final Project - Thesis","title":"Outline"},{"location":"Courses_outline/#outline","text":"","title":"Outline"},{"location":"Courses_outline/#computer-engineering","text":"is a four year practical program.","title":"Computer Engineering"},{"location":"Courses_outline/#first-year","text":"In the first year you learn the basic programming syntax and Main university courses related to engineering like Mathematics .","title":"First year"},{"location":"Courses_outline/#first-semester","text":"Lesson Name brief info Programming Languages 1 Basic JAVA language Physic 1 Serway 1 Mathematics 1 calculus 1 introduction to computer engineering brief history about computing and Computer engineering major ataturk\u2019s principles and history of turkish revolution Brief introduction to the history of turkye Turkish language Turkish language basics and grammer Advanced English English langauge for engineering","title":"First semester"},{"location":"Courses_outline/#second-semester","text":"Lesson Name brief info Programming Languages 2 Intro to DataBase SQL and GUI with JAVA Physic 2 serway 2 Mathematics 2 calculus 2 Advanced English II English langauge for engineering ataturk\u2019s principles and history of turkish revolution II Brief introduction to the history of turkye Turkish language II Turkish language basics and grammer Linear Algebra introduction to linear algebra","title":"Second semester"},{"location":"Courses_outline/#second-year","text":"","title":"Second year"},{"location":"Courses_outline/#third-semester","text":"Lesson Name brief info Discrete Structures Design Softwares An introduction to LabView program Digital Systems to-fill-soon Electric Circuits to-fill-soon Programming Languages III Numerical methods differential equations","title":"Third semester"},{"location":"Courses_outline/#forth-semester","text":"Lesson Name brief info Statistics and Probability Data Structures to-fill-soon Oral and Written Communication in Engineering to-fill-soon Microprocessors systems Python Programing Language Electronic Circuits to-fill-soon","title":"Forth semester"},{"location":"Courses_outline/#third-year","text":"","title":"Third year"},{"location":"Courses_outline/#fifth-semester","text":"Lesson Name brief info Summer internship Operating systmes Database Managing systems Advanced programming Algorithm Analysis & Design Computer Ethics and laws","title":"Fifth semester"},{"location":"Courses_outline/#sixth-semester","text":"Lesson Name brief info human computer interaction visualization Entrepreneurship and Innovation II computer architecture and organization Computer networks Software Engineering Formal Languages and Automata Theory","title":"Sixth semester"},{"location":"Courses_outline/#fourth-year","text":"","title":"Fourth year"},{"location":"Courses_outline/#seventh-semester","text":"Lesson Name brief info Web Design and Programming Software Project Management System Programming Quality Management Entrepreneurship and Innovation Final project - Thesis","title":"seventh semester"},{"location":"Courses_outline/#eighth-semester","text":"Lesson Name brief info Introduction to Data Mining Introduction to Machine Learning Introduction to Data Science Engineering Management Introduction to History of the Science and technology Final Project - Thesis","title":"Eighth semester"},{"location":"Extracurricular/","text":"Extracurricular Erasmus During university yaer you can apply to erasmus and have an experience of studying abroad -- you can check their program with International offiec in the university. University Science Clubs There is few science clubs and activities in the university wheich you can engage here you will have a list of them to find what's the best for you and join their activities External Activities During your period in the university you can benifits from few international and volunteering programs that can help you to have a better and stronger skills at the next table I have listed few of what I know to check. In general the main benefit will be liablity, swags and suppourt for them to use their programs and products. Program Name Company Brief information Github Campus Expert Github Microsoft student partner MSFT Mozilla Campus clubs Mozilla Google student clubs Google IBM ambassador IBM DeepLearning.ai ambassador Deeplearning.ai","title":"Extracurricular"},{"location":"Extracurricular/#extracurricular","text":"","title":"Extracurricular"},{"location":"Extracurricular/#erasmus","text":"During university yaer you can apply to erasmus and have an experience of studying abroad -- you can check their program with International offiec in the university.","title":"Erasmus"},{"location":"Extracurricular/#university-science-clubs","text":"There is few science clubs and activities in the university wheich you can engage here you will have a list of them to find what's the best for you and join their activities","title":"University Science Clubs"},{"location":"Extracurricular/#external-activities","text":"During your period in the university you can benifits from few international and volunteering programs that can help you to have a better and stronger skills at the next table I have listed few of what I know to check. In general the main benefit will be liablity, swags and suppourt for them to use their programs and products. Program Name Company Brief information Github Campus Expert Github Microsoft student partner MSFT Mozilla Campus clubs Mozilla Google student clubs Google IBM ambassador IBM DeepLearning.ai ambassador Deeplearning.ai","title":"External Activities"},{"location":"Thesis/","text":"Thesis Kuran Rehberi At this page I am gonna talk about the Thesis writing, program and my self reflection Bahis Qurani introduction At this thesis I have explained my work at BahisQurani program during the last year Here i will have a few short list of my work and how I improved it, my self reflection and even some of the files and pictures that I have used for this thesis. I will exaplin few tools that helped me as well; to make it easier for other users in the future to write their thesis better and even grow up from my work. I would highly suggest anyone who has any kind of feedback to open an issue for that to communicate together or even reach me through anyway they find suitable for them. writing my Thesis I will tell you about my journey during writing my thesis in hope that will help you to understand how it went and overcome the obstacles, learn from my mistakes as well. First I will explain the results of both tries to write the thesis then will explain the twist and list the tools I have used. First Rund I could not have a high quality and good thesis at this time, I hardly wrote 8 pages about my work even though it was for a one semester which means about 3 months of work! The problem for me was having a lack of motivation for writing thesis since i felt like i have done nothing and it was simple, beside that I was not sure of the prupose of my writing! why would I write something that can be explained by code? and for whom I am gonna write? All of those questions remained without a satifying answer for me for a while, even during the second semester... Second Round At this time I have changed my methodology to write the thesis started by answering the questions that was facing before which answering them helped me to do the job in the way that i like, prefer and even value. Getting to change my ideas and the way I see the thesis came from the idea of \"Doing what is right!\" instead of just checking few documenatations that does not give the answers to my question. The twist (TL;DR) Answering the questions by my own helped me to write my thesis, beside that I have written few tools to make my life and thesis writing much easiert - I have explained the tools in the next section - for the question asnwers it was like this: The purpose of writing: Explaining my work during the year for those who does not know me. The Target readers: Three audience (Programmer, managers, users) The users Are those who needs to know the purpose and the results and how to use the program. managers are those who deos not want to dive deep in the details about the program and tools i have done but would like to know the main algorthms, yet they want to know how I have solved the struggles I faced and what I am going to do in the future to improve my work. Programmers are those who want to know the basic programming tools that i have used and how i achieved it, how i used and learn a specific tool and why i used it! for more details I have written and prepared few online documentations for that. What to write? got solved by checking the target audience and focus on each of them based on their needs What did i do? GIT really helped me a lot for this <3 Writing process While writing i kept in mind the tools that i have and how to use them, that's why i followed the next steps: Check my work (Git History) Cluster my work Products Engineering struggles Programming learnt: new things I learnt practiced: Things i knew but practiced during my this time. tools (list of used tools) Create outline Explain each point For images and flowchart I just mentioned them and kept them in highlighted brackets to get back to them later (my approach explained in the tools) Tools I decided to list this section to make it easier to check and read. Turkish Lanuage Checker I am a faster typer in english yet when you change the language to turkish, I find it hard to find the places of letters since I am not using it everyday and it has a different layout than english that's why I have used Turkish character website to fix my errors and google docs corrector. LaTeX I fall in love with latex since it makes it easier for you to focus on the writing itself and forget the design. I have used the overleaf webiste to generate my latex and take care of few things. The template When i needed to do any cofniguration i was googling and checking the docs of overleaf to see what can I do. worth to check: - Figures Convertor Is a web tool that I have used to overcome the Turkish character problem in latex and make my own specific desgin for pictures instead of struggling with the syntax the tool Since i have written the tool, it helped me to check it and change the output based on my needs. The writing syntax was simple: # Chapter ## Section ### Subsection #### SubSubSection @foto{link}{caption} Images For this I just used to take screenshots of each image based on their place then renamed the whole iamges with increament numbers to make it easier to link them with the latex. in the thesis i had them like: @foto{foto1.png}{caption} @foto{foto2.png}{caption} @foto{foto3.png}{caption} Then used the rename shell to get the names of the Images FlowCharts For the flow charts I have used js2flowchart tool which generate flowcharts based on your javascript code. then used another tool for linux rsvg-convert to convert the flowcharts to png and add them to the thesis. First I have written the whole codes then used a special shell (again) to get my desired output. Citations I have used this Website to Auto generate my citations and add them immediately to the latex bib file.","title":"Thesis"},{"location":"Thesis/#thesis-kuran-rehberi","text":"At this page I am gonna talk about the Thesis writing, program and my self reflection Bahis Qurani","title":"Thesis Kuran Rehberi"},{"location":"Thesis/#introduction","text":"At this thesis I have explained my work at BahisQurani program during the last year Here i will have a few short list of my work and how I improved it, my self reflection and even some of the files and pictures that I have used for this thesis. I will exaplin few tools that helped me as well; to make it easier for other users in the future to write their thesis better and even grow up from my work. I would highly suggest anyone who has any kind of feedback to open an issue for that to communicate together or even reach me through anyway they find suitable for them.","title":"introduction"},{"location":"Thesis/#writing-my-thesis","text":"I will tell you about my journey during writing my thesis in hope that will help you to understand how it went and overcome the obstacles, learn from my mistakes as well. First I will explain the results of both tries to write the thesis then will explain the twist and list the tools I have used.","title":"writing my Thesis"},{"location":"Thesis/#first-rund","text":"I could not have a high quality and good thesis at this time, I hardly wrote 8 pages about my work even though it was for a one semester which means about 3 months of work! The problem for me was having a lack of motivation for writing thesis since i felt like i have done nothing and it was simple, beside that I was not sure of the prupose of my writing! why would I write something that can be explained by code? and for whom I am gonna write? All of those questions remained without a satifying answer for me for a while, even during the second semester...","title":"First Rund"},{"location":"Thesis/#second-round","text":"At this time I have changed my methodology to write the thesis started by answering the questions that was facing before which answering them helped me to do the job in the way that i like, prefer and even value. Getting to change my ideas and the way I see the thesis came from the idea of \"Doing what is right!\" instead of just checking few documenatations that does not give the answers to my question.","title":"Second Round"},{"location":"Thesis/#the-twist-tldr","text":"Answering the questions by my own helped me to write my thesis, beside that I have written few tools to make my life and thesis writing much easiert - I have explained the tools in the next section - for the question asnwers it was like this: The purpose of writing: Explaining my work during the year for those who does not know me. The Target readers: Three audience (Programmer, managers, users) The users Are those who needs to know the purpose and the results and how to use the program. managers are those who deos not want to dive deep in the details about the program and tools i have done but would like to know the main algorthms, yet they want to know how I have solved the struggles I faced and what I am going to do in the future to improve my work. Programmers are those who want to know the basic programming tools that i have used and how i achieved it, how i used and learn a specific tool and why i used it! for more details I have written and prepared few online documentations for that. What to write? got solved by checking the target audience and focus on each of them based on their needs What did i do? GIT really helped me a lot for this <3","title":"The twist (TL;DR)"},{"location":"Thesis/#writing-process","text":"While writing i kept in mind the tools that i have and how to use them, that's why i followed the next steps: Check my work (Git History) Cluster my work Products Engineering struggles Programming learnt: new things I learnt practiced: Things i knew but practiced during my this time. tools (list of used tools) Create outline Explain each point For images and flowchart I just mentioned them and kept them in highlighted brackets to get back to them later (my approach explained in the tools)","title":"Writing process"},{"location":"Thesis/#tools","text":"I decided to list this section to make it easier to check and read.","title":"Tools"},{"location":"Thesis/#turkish-lanuage-checker","text":"I am a faster typer in english yet when you change the language to turkish, I find it hard to find the places of letters since I am not using it everyday and it has a different layout than english that's why I have used Turkish character website to fix my errors and google docs corrector.","title":"Turkish Lanuage Checker"},{"location":"Thesis/#latex","text":"I fall in love with latex since it makes it easier for you to focus on the writing itself and forget the design. I have used the overleaf webiste to generate my latex and take care of few things. The template When i needed to do any cofniguration i was googling and checking the docs of overleaf to see what can I do. worth to check: - Figures","title":"LaTeX"},{"location":"Thesis/#convertor","text":"Is a web tool that I have used to overcome the Turkish character problem in latex and make my own specific desgin for pictures instead of struggling with the syntax the tool Since i have written the tool, it helped me to check it and change the output based on my needs. The writing syntax was simple: # Chapter ## Section ### Subsection #### SubSubSection @foto{link}{caption}","title":"Convertor"},{"location":"Thesis/#images","text":"For this I just used to take screenshots of each image based on their place then renamed the whole iamges with increament numbers to make it easier to link them with the latex. in the thesis i had them like: @foto{foto1.png}{caption} @foto{foto2.png}{caption} @foto{foto3.png}{caption} Then used the rename shell to get the names of the Images","title":"Images"},{"location":"Thesis/#flowcharts","text":"For the flow charts I have used js2flowchart tool which generate flowcharts based on your javascript code. then used another tool for linux rsvg-convert to convert the flowcharts to png and add them to the thesis. First I have written the whole codes then used a special shell (again) to get my desired output.","title":"FlowCharts"},{"location":"Thesis/#citations","text":"I have used this Website to Auto generate my citations and add them immediately to the latex bib file.","title":"Citations"},{"location":"Thesis/Courses_outline/","text":"outline 1. discrete-structure Discrete structure is a lesson in the computer engineering at university . In tihs Repository I will write the Topics that covered at the lesson share home works and lab projects. Course book : Discrete Mathematics and Its Applications. publisher : MC Graw hill. Auther :Kenneth H. Rosen. The topics that covered by weeks : week topic Extra 1 Propositional Logic , Applications of Propositional Logic 2 Propositional Equivalences , Predicates and Quantifiers 3 Nested Quantifiers , Rules of Inference 4 Introduction to Proofs , Proof Methods and Strategy 5 Basic Structures: Sets, Functions and Sequences 6 Basic Structures: Functions, Sums, and Matrices 7 Algorithms 8 Mid-Term Exams week 9 Cryptography and number theory 10 Cryptography and number theory 11 induction and recursion 12 counting 13 counting and graph 2. Data structure Its A lesson in the university were we learn about the basic data structures like queue , stack , etc. week topic Extra 1 Introduction to the Lesson and where to use Data Structure 2 Big O rotation and algorithm analyses 3 Linked List and generic classes 4 Stack its implementation and usage 5 Queue its implementation and usage 6 searching - hashing and chaining 7 Recursive functions , searching algorithms and sorting 8 Mid-Term Exams week 9 Trees and its implementation 10 Heap tree usage and implementation 11 cancelled 12 depth first search and breadth first search 13 Huffman Coding and lempelziv 3. Desgin-Software we are taking LabView and making a few applications on it at this lesson . week topic Extra 1 showing a few exambles from LabView and programs that can be programmed by using it 2 Introduction to the program and defining the Variables, comparing with normal programming languages 3 Arrays , index array , Loops 4 Cluster Data type and bundles 5 Case Structure and if condition 6 sequences local variables . 7 Clusters and Arrays , the differnce and usage 8 Mid-Term Exams week 9 Sub LabView - sub VI 10 Formula Node 11 Shared Variable 12 Input/output at LAbview by myRIO 13 Canceled 4. Electrical circuit analysis Electrical circuit is the core of any device understanding them is important for our feild , you cant build an autonoum vechile witohut using it . week topic Extra 1 Intoduction to Electric , Current and Voltage . 2 Ohms Law and Power , Kirchhoffs Circuit Law 3 Resistance calculating series and parallel 4 Loop and nodal analysis 5 Thevenin and norton Laws 6 Max power transfer , super position 7 Solving problems 8 Mid-Term Exams week 9 inductance 10 waiting lol 11 12 13 5. Formal Languages and Automata Theory professor: Mehmet Akif Eyler (E\u011fler) book : Introduction to Automata Theory, Languages, and Computation Auther :Hopcroft, Motwani, Ullman. week topic Extra 1 Languages and Automata 2 Finite Automata 3 Non-deterministic Finite Automata 4 Regular Expressions 5 Regular Languages & Properties 6 Context-Free Languages -- Quiz 7 Pushdown Automata 8 (midterm) 9 Toy language: microJ 10 Turing Machines 11 Decision Problems: P and NP 12 Easy Problems in Graph Theory 13 Hard Problems in Graph Theory 6. Advanced Programming Techniques professor: Mehmet Akif Eyler (E\u011fler) Repository : weekly work & term project Examples : sample JavaScript pages Eloquent JavaScript : our textbook Outline : weekly planning of the course Tools: Chrome , git , GitHub , GitKraken Week Topic Chap API 1 Numbers and Strings 1, 2 String 2 Arrays and Functions 3 Array 3 Objects \u2013 Inspector 4 Object 4 Keyed Collections 6 Set & Map 5 Fetching Remote Files 11 Promise 6 Reading Local Files 11 File 7 Midterm 8 CSS Animations 14 Animation 9 Document Object Model 14 DOM 10 Drawing on Canvas 17 Canvas 11 Image Processing Transform 12 Pixel Art Editor 19 ImageData 13 External API: Maps Google Maps 14 Term Project 15 Final Grading Midterm 20% Quiz 10 4xHW 10 10xCW 10 Project 15 Final 35 System programming |Week|Date|Topic| |1|25.09|Introduction,to,course.,Intel,Assembly,language.| |2|02.10|Interfacing,C,with,Assembly| |3|09.10|Interfacing,C,with,Assembly| |4|16.10|Linkers,and,loaders| |5|23.10|The,Linux,Kernel,structure.,System,calls.| |6|30.10|Process,management,and,scheduling.| |7|06.11|Kernel,modules.| |8|13.11|MIDTERM| |9|20.11|Input/Output,subsystem| |10|27.11|Input/Output,subsystem| |11|04.12|Accessing,devices| |12|11.12|Device,drivers| |13|18.12|Device,drivers| |14|25.12|User,space,file,system| |15|01.01|HOLIDAY| Grading |Name|Count|Percentage| |Final|1|30| |Midterm|1|15| |Labwork|12|24| |Quiz|3|15| |Homeworks|2|16,|","title":"outline"},{"location":"Thesis/Courses_outline/#outline","text":"","title":"outline"},{"location":"Thesis/Courses_outline/#1-discrete-structure","text":"Discrete structure is a lesson in the computer engineering at university . In tihs Repository I will write the Topics that covered at the lesson share home works and lab projects. Course book : Discrete Mathematics and Its Applications. publisher : MC Graw hill. Auther :Kenneth H. Rosen. The topics that covered by weeks : week topic Extra 1 Propositional Logic , Applications of Propositional Logic 2 Propositional Equivalences , Predicates and Quantifiers 3 Nested Quantifiers , Rules of Inference 4 Introduction to Proofs , Proof Methods and Strategy 5 Basic Structures: Sets, Functions and Sequences 6 Basic Structures: Functions, Sums, and Matrices 7 Algorithms 8 Mid-Term Exams week 9 Cryptography and number theory 10 Cryptography and number theory 11 induction and recursion 12 counting 13 counting and graph","title":"1. discrete-structure"},{"location":"Thesis/Courses_outline/#2-data-structure","text":"Its A lesson in the university were we learn about the basic data structures like queue , stack , etc. week topic Extra 1 Introduction to the Lesson and where to use Data Structure 2 Big O rotation and algorithm analyses 3 Linked List and generic classes 4 Stack its implementation and usage 5 Queue its implementation and usage 6 searching - hashing and chaining 7 Recursive functions , searching algorithms and sorting 8 Mid-Term Exams week 9 Trees and its implementation 10 Heap tree usage and implementation 11 cancelled 12 depth first search and breadth first search 13 Huffman Coding and lempelziv","title":"2. Data structure"},{"location":"Thesis/Courses_outline/#3-desgin-software","text":"we are taking LabView and making a few applications on it at this lesson . week topic Extra 1 showing a few exambles from LabView and programs that can be programmed by using it 2 Introduction to the program and defining the Variables, comparing with normal programming languages 3 Arrays , index array , Loops 4 Cluster Data type and bundles 5 Case Structure and if condition 6 sequences local variables . 7 Clusters and Arrays , the differnce and usage 8 Mid-Term Exams week 9 Sub LabView - sub VI 10 Formula Node 11 Shared Variable 12 Input/output at LAbview by myRIO 13 Canceled","title":"3. Desgin-Software"},{"location":"Thesis/Courses_outline/#4-electrical-circuit-analysis","text":"Electrical circuit is the core of any device understanding them is important for our feild , you cant build an autonoum vechile witohut using it . week topic Extra 1 Intoduction to Electric , Current and Voltage . 2 Ohms Law and Power , Kirchhoffs Circuit Law 3 Resistance calculating series and parallel 4 Loop and nodal analysis 5 Thevenin and norton Laws 6 Max power transfer , super position 7 Solving problems 8 Mid-Term Exams week 9 inductance 10 waiting lol 11 12 13","title":"4. Electrical circuit analysis"},{"location":"Thesis/Courses_outline/#5-formal-languages-and-automata-theory","text":"professor: Mehmet Akif Eyler (E\u011fler) book : Introduction to Automata Theory, Languages, and Computation Auther :Hopcroft, Motwani, Ullman. week topic Extra 1 Languages and Automata 2 Finite Automata 3 Non-deterministic Finite Automata 4 Regular Expressions 5 Regular Languages & Properties 6 Context-Free Languages -- Quiz 7 Pushdown Automata 8 (midterm) 9 Toy language: microJ 10 Turing Machines 11 Decision Problems: P and NP 12 Easy Problems in Graph Theory 13 Hard Problems in Graph Theory","title":"5. Formal Languages and Automata Theory"},{"location":"Thesis/Courses_outline/#6-advanced-programming-techniques","text":"professor: Mehmet Akif Eyler (E\u011fler) Repository : weekly work & term project Examples : sample JavaScript pages Eloquent JavaScript : our textbook Outline : weekly planning of the course Tools: Chrome , git , GitHub , GitKraken Week Topic Chap API 1 Numbers and Strings 1, 2 String 2 Arrays and Functions 3 Array 3 Objects \u2013 Inspector 4 Object 4 Keyed Collections 6 Set & Map 5 Fetching Remote Files 11 Promise 6 Reading Local Files 11 File 7 Midterm 8 CSS Animations 14 Animation 9 Document Object Model 14 DOM 10 Drawing on Canvas 17 Canvas 11 Image Processing Transform 12 Pixel Art Editor 19 ImageData 13 External API: Maps Google Maps 14 Term Project 15 Final Grading Midterm 20% Quiz 10 4xHW 10 10xCW 10 Project 15 Final 35 System programming |Week|Date|Topic| |1|25.09|Introduction,to,course.,Intel,Assembly,language.| |2|02.10|Interfacing,C,with,Assembly| |3|09.10|Interfacing,C,with,Assembly| |4|16.10|Linkers,and,loaders| |5|23.10|The,Linux,Kernel,structure.,System,calls.| |6|30.10|Process,management,and,scheduling.| |7|06.11|Kernel,modules.| |8|13.11|MIDTERM| |9|20.11|Input/Output,subsystem| |10|27.11|Input/Output,subsystem| |11|04.12|Accessing,devices| |12|11.12|Device,drivers| |13|18.12|Device,drivers| |14|25.12|User,space,file,system| |15|01.01|HOLIDAY| Grading |Name|Count|Percentage| |Final|1|30| |Midterm|1|15| |Labwork|12|24| |Quiz|3|15| |Homeworks|2|16,|","title":"6. Advanced Programming Techniques"},{"location":"fourth_year/SPM/","text":"Software Project Management Puanlama tip oran Ara sinav 30 Proje 25 odev 5 final 40 Ders Notlar\u0131 08.10.2019 for project success we need to check three thingstime to accure the best quality: budget requirements (scope) time Software proeject management we need to chekc three things as well : 3P (Sofware develeopment model ) problem proccess peopele what kind of people we have: proejct manager, software analyst, softwarere negineering, database and * network. product ERP or Operating system software and what kind of sotware we need. Project managment raod-map ==> step by step understanding the proejct background the palyer -> clients priorities : time budget requirements defning the project project deliverable proejct scope review? approved client team? --> user, sponsor, planning the porject lists porject activities dependecy between activities estiamate time, effort assigned resources (hardware, software, effort, pepole) Project schedule ==> examples like grant diagram, pert and MS-Project team orgnisation quality plan risk plan running the proejct closing the proejct She draw spiral model Bring it from google Work breakdown structure Prortype: customer (#@$) planning risk desgin construct customer product C P RA D C C Advanced prdouct Stuff will be used here as well MAinaiatnes information system project management jolyon hallow book. Project deliverable planning project plan Statement of work (SOW) cost benifits project schedule Budget Desgin data model process model data dictionary bsuiness rules question deilverablity Developments/implemenation code, unit test, plan, report , intgeritiy ,system training plan Pay Back --> after what time and what can we do ,2 years net preenst value . 15.10.2019 Change request Form (note that she is reading from the book reading the book is much better than just listening to her) The form strucutre will have the next details: date Project manager requested by description of change impact on project schedule costs resption date required data approved/rejected project Scope Change. Planning: proejct assumention and constiaints project activities ] connection between activities STart finishL start>>>fnish --> show on grant diagram. finish start: finish finish start start (gantt diagram) Sure ve islem (ag analizleri) pert Project evaluation and review teq. CPM ctricila path methods -- log time Water fall project activites(WBS - work break down structure) PLannng reguirements analysing collecting data modeling documenting SRS desgin Geeneral desgin detaield desgin database desgin interface desgin result/report desgin process desgin implementing coding creating database test engineering test user test birim test butenelmeme testi sistem test kullnici testi LAg time = activity time : best case, worst case, average case 22.10.2019 Project planning Kabul ve kisitlar projedeki aktiveteler listesi aktivitlere arasindaki baglilik : finish start- start strart - finish finish (bir is baslayip ikiknisi baslar, ayni zamanda baslamasi, bitmesi , ) En optimum yol, CPM Pert Gant diyagrami ile yapilir gereken is gucu (her bir aktivite icin) toplam isgucu Goreb tipi : L.A. S.A P.Y. DW gorev atama (ass\u0131gn\u0131ng and levele\u0131ng resources * kaynak) Butce SLack Time Risk planlama (risk yontemi) Ekip yonetimi Kalite plani/planlama Gereken sure aligning the schedule sure mutlak mi? ek sure? segement into release reduce functionality additional stuff subconstracting Risk yonetimi: risk belirleme risk planlama risk izleme risk raporlama Risk tipler perosnal riski isten ayrilma zaman ayirmama plana gore (calisan yeresizligi) yetenek ekiskligi egitim eksikligi isletemcilik riski dagitim teslim tarihi ilisikili projeler musteri riski eski musteri mi? reviews suresi surec riski yazilim gelistirme adimlari yeni surec tanimi Yazilim Muhendisligi standartlari gelistirme ortami ve altyapi genel riskler Risk tablosu: rsik tanimi, risik tipi, olasilik, etkisi, onemi R\u0131sk tan\u0131m\u0131\u00f6 onnem\u0131 \u00f6onlem\u0131, maliyeti. Risk plan tema: risk izleme milestrones risk izleme ekibi On inceleme ve feasibility : WBS (work braek down structure) Waterflow, sprial 05.11.2019 P.M road map understanding defining planing --> project planning running closing Project planning: proect assumptions and constrians Software development model activities : requeirmenet analysis desgin implementiaion test WBS Dependecies between activicites FF (f = finish , s = start) FS SS Estimapte of work required R.A. adam/ny effort desgin efofrt implementation effort coding, database effeort Totoal Adam/ny PERT - project eveletuion and R techniguqes Gantt Pert Gant - time, work , assign resources : SE , people --> leveling Milestones waterfall - based on them? budget? Risk planning staff (people) risks Equipment Clinet risks Scope risks Technolgoy risks Physical risks Example of risk table: Risk Category proablity Impace Degree (impact* probality) Quality planning Standard Review inspection version control continue orgnisations communication confguration managment = project running, closing the difference? write a report of project and what happened Proje nedir proje yonteimi nedir, onemli konular 17.11.2019 Seflik sistemi Demokratik sistemi Hirasik ekip Proje yoneticisi: Destek Sistem analisleri yazilim gelistirici Test ekip fonkisyonel proje ekibi 26.11.2019 Kaliteli yazilim saglamak Standart yazilim gelistirme surec modeli sertfikali ekib gozden gecirme review inspection - inceleme test yazilim olcumu SCM SRM SPICE Capability Maturity Model Integration (CMMI) (KPA , Key process area) Baslangic Managed Proje plan Gereksinim nalaizi yazilim kongrasyon yonetimi tasarim belgesi Defined kurumsal yapida proje yonetimi risk yonetimi gereksinim yontetimi quatnitfiy managed saysial proje yonetimi optimizify feedback yaraticilik yonilik People CMM Software metrics Software metrics B\u00fcy\u00fckl\u00fck Line of code (sat\u0131r say\u0131s\u0131) kloc loc, k = \u00f6ne thousand FP Tasar\u0131m Algoritma karma\u015f\u0131kl\u0131\u011f\u0131 Nesne y\u00f6nelik yakla\u015f\u0131m\u0131 7 \u00f6l\u00e7\u00fcm birimi var Ck. Metrics (chidamber-kemerrer) D\u00f6ng\u00fcsel karma\u015f\u0131k (cyclomatic complexity) (mcCabe) Etkin programlama kurallar\u0131 Program i\u00e7indeki Kalite fakt\u00f6rleri mcCall Hesaplanma arifmetikleri i\u015flem yo\u011funlu\u011fu Halstead 03.12.2019 Y\u00f6netim kalite sistemi Formal yontem, ygs modelleri Standartlar Yetkinlik belgeleri GG - milestone Incelem - static verification (de\u011ferlendirme) Test - dinamik geceleme (do\u011frulama) validation (verification) Yaz\u0131l\u0131m \u00f6l\u00e7\u00fctleri B\u00fcy\u00fckl\u00fck (loc, FP) Karma\u015f\u0131kl\u0131k D\u00f6ng\u00fcsel karma\u015f\u0131kl\u0131\u011f\u0131 (gemotry complexity) McCabe arithmetic hesaplama (halstaal) McCull kalite de\u011ferleri/fakt\u00f6rleri, CKM metrics for OOP Yazilim Konf. Y\u00f6. Birimleri tan\u0131m\u0131 \u015eef. Conf. Identification De\u011fi\u015fiklik konfederasyon kontrol\u00f6 change contoel Raporlama, static reporting S\u00fcr\u00fcm y\u00f6netimi, Release management - release management cycle (drawing) 8 leveled circle Son ders Proje yonetimi: proje anlasmasi: fizibility analizi teknik fizibility Ekonomik fizibilitesi proje tanimlammasi teslim erilecek alan (kapsam) tanimi Alan degisikligi formu Y.G surec modeli proje planlanmasi Kabul ve kisitlar risk is adimlari WBS PERT Gant - adim ay butce ekis orgnasiyo kalite plani gerceklestirme, kontrol izlenmesi kapanis Proje nedir? yonetim, proje yonetimi, Y.M, B.m. YPY. Yazilim buyukluk LOL, Kloc , FP Maliyet tahmini butce kalemleri: personel giderleri Donanim ve arac giderleri danismanlik seyahat giderleri alt yuklemcisi diger","title":"Software Project Management"},{"location":"fourth_year/SPM/#software-project-management","text":"","title":"Software Project Management"},{"location":"fourth_year/SPM/#puanlama","text":"tip oran Ara sinav 30 Proje 25 odev 5 final 40","title":"Puanlama"},{"location":"fourth_year/SPM/#ders-notlar","text":"","title":"Ders Notlar\u0131"},{"location":"fourth_year/SPM/#08102019","text":"for project success we need to check three thingstime to accure the best quality: budget requirements (scope) time Software proeject management we need to chekc three things as well : 3P (Sofware develeopment model ) problem proccess peopele what kind of people we have: proejct manager, software analyst, softwarere negineering, database and * network. product ERP or Operating system software and what kind of sotware we need. Project managment raod-map ==> step by step understanding the proejct background the palyer -> clients priorities : time budget requirements defning the project project deliverable proejct scope review? approved client team? --> user, sponsor, planning the porject lists porject activities dependecy between activities estiamate time, effort assigned resources (hardware, software, effort, pepole) Project schedule ==> examples like grant diagram, pert and MS-Project team orgnisation quality plan risk plan running the proejct closing the proejct She draw spiral model Bring it from google Work breakdown structure Prortype: customer (#@$) planning risk desgin construct customer product C P RA D C C Advanced prdouct Stuff will be used here as well MAinaiatnes information system project management jolyon hallow book. Project deliverable planning project plan Statement of work (SOW) cost benifits project schedule Budget Desgin data model process model data dictionary bsuiness rules question deilverablity Developments/implemenation code, unit test, plan, report , intgeritiy ,system training plan Pay Back --> after what time and what can we do ,2 years net preenst value .","title":"08.10.2019"},{"location":"fourth_year/SPM/#15102019","text":"Change request Form (note that she is reading from the book reading the book is much better than just listening to her) The form strucutre will have the next details: date Project manager requested by description of change impact on project schedule costs resption date required data approved/rejected project Scope Change. Planning: proejct assumention and constiaints project activities ] connection between activities STart finishL start>>>fnish --> show on grant diagram. finish start: finish finish start start (gantt diagram) Sure ve islem (ag analizleri) pert Project evaluation and review teq. CPM ctricila path methods -- log time Water fall project activites(WBS - work break down structure) PLannng reguirements analysing collecting data modeling documenting SRS desgin Geeneral desgin detaield desgin database desgin interface desgin result/report desgin process desgin implementing coding creating database test engineering test user test birim test butenelmeme testi sistem test kullnici testi LAg time = activity time : best case, worst case, average case","title":"15.10.2019"},{"location":"fourth_year/SPM/#22102019","text":"Project planning Kabul ve kisitlar projedeki aktiveteler listesi aktivitlere arasindaki baglilik : finish start- start strart - finish finish (bir is baslayip ikiknisi baslar, ayni zamanda baslamasi, bitmesi , ) En optimum yol, CPM Pert Gant diyagrami ile yapilir gereken is gucu (her bir aktivite icin) toplam isgucu Goreb tipi : L.A. S.A P.Y. DW gorev atama (ass\u0131gn\u0131ng and levele\u0131ng resources * kaynak) Butce SLack Time Risk planlama (risk yontemi) Ekip yonetimi Kalite plani/planlama Gereken sure aligning the schedule sure mutlak mi? ek sure? segement into release reduce functionality additional stuff subconstracting Risk yonetimi: risk belirleme risk planlama risk izleme risk raporlama Risk tipler perosnal riski isten ayrilma zaman ayirmama plana gore (calisan yeresizligi) yetenek ekiskligi egitim eksikligi isletemcilik riski dagitim teslim tarihi ilisikili projeler musteri riski eski musteri mi? reviews suresi surec riski yazilim gelistirme adimlari yeni surec tanimi Yazilim Muhendisligi standartlari gelistirme ortami ve altyapi genel riskler Risk tablosu: rsik tanimi, risik tipi, olasilik, etkisi, onemi R\u0131sk tan\u0131m\u0131\u00f6 onnem\u0131 \u00f6onlem\u0131, maliyeti. Risk plan tema: risk izleme milestrones risk izleme ekibi On inceleme ve feasibility : WBS (work braek down structure) Waterflow, sprial","title":"22.10.2019"},{"location":"fourth_year/SPM/#05112019","text":"P.M road map understanding defining planing --> project planning running closing Project planning: proect assumptions and constrians Software development model activities : requeirmenet analysis desgin implementiaion test WBS Dependecies between activicites FF (f = finish , s = start) FS SS Estimapte of work required R.A. adam/ny effort desgin efofrt implementation effort coding, database effeort Totoal Adam/ny PERT - project eveletuion and R techniguqes Gantt Pert Gant - time, work , assign resources : SE , people --> leveling Milestones waterfall - based on them? budget? Risk planning staff (people) risks Equipment Clinet risks Scope risks Technolgoy risks Physical risks Example of risk table: Risk Category proablity Impace Degree (impact* probality) Quality planning Standard Review inspection version control continue orgnisations communication confguration managment = project running, closing the difference? write a report of project and what happened Proje nedir proje yonteimi nedir, onemli konular","title":"05.11.2019"},{"location":"fourth_year/SPM/#17112019","text":"Seflik sistemi Demokratik sistemi Hirasik ekip Proje yoneticisi: Destek Sistem analisleri yazilim gelistirici Test ekip fonkisyonel proje ekibi","title":"17.11.2019"},{"location":"fourth_year/SPM/#26112019","text":"Kaliteli yazilim saglamak Standart yazilim gelistirme surec modeli sertfikali ekib gozden gecirme review inspection - inceleme test yazilim olcumu SCM SRM SPICE Capability Maturity Model Integration (CMMI) (KPA , Key process area) Baslangic Managed Proje plan Gereksinim nalaizi yazilim kongrasyon yonetimi tasarim belgesi Defined kurumsal yapida proje yonetimi risk yonetimi gereksinim yontetimi quatnitfiy managed saysial proje yonetimi optimizify feedback yaraticilik yonilik People CMM Software metrics Software metrics B\u00fcy\u00fckl\u00fck Line of code (sat\u0131r say\u0131s\u0131) kloc loc, k = \u00f6ne thousand FP Tasar\u0131m Algoritma karma\u015f\u0131kl\u0131\u011f\u0131 Nesne y\u00f6nelik yakla\u015f\u0131m\u0131 7 \u00f6l\u00e7\u00fcm birimi var Ck. Metrics (chidamber-kemerrer) D\u00f6ng\u00fcsel karma\u015f\u0131k (cyclomatic complexity) (mcCabe) Etkin programlama kurallar\u0131 Program i\u00e7indeki Kalite fakt\u00f6rleri mcCall Hesaplanma arifmetikleri i\u015flem yo\u011funlu\u011fu Halstead","title":"26.11.2019"},{"location":"fourth_year/SPM/#03122019","text":"Y\u00f6netim kalite sistemi Formal yontem, ygs modelleri Standartlar Yetkinlik belgeleri GG - milestone Incelem - static verification (de\u011ferlendirme) Test - dinamik geceleme (do\u011frulama) validation (verification) Yaz\u0131l\u0131m \u00f6l\u00e7\u00fctleri B\u00fcy\u00fckl\u00fck (loc, FP) Karma\u015f\u0131kl\u0131k D\u00f6ng\u00fcsel karma\u015f\u0131kl\u0131\u011f\u0131 (gemotry complexity) McCabe arithmetic hesaplama (halstaal) McCull kalite de\u011ferleri/fakt\u00f6rleri, CKM metrics for OOP Yazilim Konf. Y\u00f6. Birimleri tan\u0131m\u0131 \u015eef. Conf. Identification De\u011fi\u015fiklik konfederasyon kontrol\u00f6 change contoel Raporlama, static reporting S\u00fcr\u00fcm y\u00f6netimi, Release management - release management cycle (drawing) 8 leveled circle","title":"03.12.2019"},{"location":"fourth_year/SPM/#son-ders","text":"Proje yonetimi: proje anlasmasi: fizibility analizi teknik fizibility Ekonomik fizibilitesi proje tanimlammasi teslim erilecek alan (kapsam) tanimi Alan degisikligi formu Y.G surec modeli proje planlanmasi Kabul ve kisitlar risk is adimlari WBS PERT Gant - adim ay butce ekis orgnasiyo kalite plani gerceklestirme, kontrol izlenmesi kapanis Proje nedir? yonetim, proje yonetimi, Y.M, B.m. YPY. Yazilim buyukluk LOL, Kloc , FP Maliyet tahmini butce kalemleri: personel giderleri Donanim ve arac giderleri danismanlik seyahat giderleri alt yuklemcisi diger","title":"Son ders"},{"location":"fourth_year/System_programming/","text":"System programming Curriculam Week Date Topic 1 25.09 Introduction,to,course.,Intel,Assembly,language. 2 02.10 Interfacing,C,with,Assembly 3 09.10 Interfacing,C,with,Assembly 4 16.10 Linkers,and,loaders 5 23.10 The,Linux,Kernel,structure.,System,calls. 6 30.10 Process,management,and,scheduling. 7 06.11 Kernel,modules. 8 13.11 MIDTERM 9 20.11 Input/Output,subsystem 10 27.11 Input/Output,subsystem 11 04.12 Accessing,devices 12 11.12 Device,drivers 13 18.12 Device,drivers 14 25.12 User,space,file,system 15 01.01 HOLIDAY Grading Name Count Percentage Final 1 30 Midterm 1 15 Labwork 12 24 Quiz 3 15 Homeworks 2 16,","title":"System Programming"},{"location":"fourth_year/System_programming/#system-programming","text":"","title":"System programming"},{"location":"fourth_year/System_programming/#curriculam","text":"Week Date Topic 1 25.09 Introduction,to,course.,Intel,Assembly,language. 2 02.10 Interfacing,C,with,Assembly 3 09.10 Interfacing,C,with,Assembly 4 16.10 Linkers,and,loaders 5 23.10 The,Linux,Kernel,structure.,System,calls. 6 30.10 Process,management,and,scheduling. 7 06.11 Kernel,modules. 8 13.11 MIDTERM 9 20.11 Input/Output,subsystem 10 27.11 Input/Output,subsystem 11 04.12 Accessing,devices 12 11.12 Device,drivers 13 18.12 Device,drivers 14 25.12 User,space,file,system 15 01.01 HOLIDAY","title":"Curriculam"},{"location":"fourth_year/System_programming/#grading","text":"Name Count Percentage Final 1 30 Midterm 1 15 Labwork 12 24 Quiz 3 15 Homeworks 2 16,","title":"Grading"},{"location":"second_year/Desgin_softwares/","text":"Desgin-Software we are taking LabView and making a few applications on it at this lesson . week topic Extra 1 showing a few exambles from LabView and programs that can be programmed by using it 2 Introduction to the program and defining the Variables, comparing with normal programming languages 3 Arrays , index array , Loops 4 Cluster Data type and bundles 5 Case Structure and if condition 6 sequences local variables . 7 Clusters and Arrays , the differnce and usage 8 Mid-Term Exams week 9 Sub LabView - sub VI 10 Formula Node 11 Shared Variable 12 Input/output at LAbview by myRIO 13 Canceled","title":"Desgin softwares"},{"location":"second_year/Desgin_softwares/#desgin-software","text":"we are taking LabView and making a few applications on it at this lesson . week topic Extra 1 showing a few exambles from LabView and programs that can be programmed by using it 2 Introduction to the program and defining the Variables, comparing with normal programming languages 3 Arrays , index array , Loops 4 Cluster Data type and bundles 5 Case Structure and if condition 6 sequences local variables . 7 Clusters and Arrays , the differnce and usage 8 Mid-Term Exams week 9 Sub LabView - sub VI 10 Formula Node 11 Shared Variable 12 Input/output at LAbview by myRIO 13 Canceled","title":"Desgin-Software"},{"location":"second_year/Electrical_circuits/","text":"Electrical circuit analysis Electrical circuit is the core of any device understanding them is important for our feild , you cant build an autonoum vechile witohut using it . week topic Extra 1 Intoduction to Electric , Current and Voltage . 2 Ohms Law and Power , Kirchhoffs Circuit Law 3 Resistance calculating series and parallel 4 Loop and nodal analysis 5 Thevenin and norton Laws 6 Max power transfer , super position 7 Solving problems 8 Mid-Term Exams week 9 inductance 10 waiting lol 11 12 13","title":"Electrical circuits"},{"location":"second_year/Electrical_circuits/#electrical-circuit-analysis","text":"Electrical circuit is the core of any device understanding them is important for our feild , you cant build an autonoum vechile witohut using it . week topic Extra 1 Intoduction to Electric , Current and Voltage . 2 Ohms Law and Power , Kirchhoffs Circuit Law 3 Resistance calculating series and parallel 4 Loop and nodal analysis 5 Thevenin and norton Laws 6 Max power transfer , super position 7 Solving problems 8 Mid-Term Exams week 9 inductance 10 waiting lol 11 12 13","title":"Electrical circuit analysis"},{"location":"second_year/Discrete%20struture/Data_structure/","text":"Data structure Its A lesson in the university were we learn about the basic data structures like queue , stack , etc. Curriculum week topic Extra 1 Introduction to the Lesson and where to use Data Structure 2 Big O rotation and algorithm analyses 3 Linked List and generic classes 4 Stack its implementation and usage 5 Queue its implementation and usage 6 searching - hashing and chaining 7 Recursive functions , searching algorithms and sorting 8 Mid-Term Exams week 9 Trees and its implementation 10 Heap tree usage and implementation 11 cancelled 12 depth first search and breadth first search 13 Huffman Coding and lempelziv","title":"Data structure"},{"location":"second_year/Discrete%20struture/Data_structure/#data-structure","text":"Its A lesson in the university were we learn about the basic data structures like queue , stack , etc.","title":"Data structure"},{"location":"second_year/Discrete%20struture/Data_structure/#curriculum","text":"week topic Extra 1 Introduction to the Lesson and where to use Data Structure 2 Big O rotation and algorithm analyses 3 Linked List and generic classes 4 Stack its implementation and usage 5 Queue its implementation and usage 6 searching - hashing and chaining 7 Recursive functions , searching algorithms and sorting 8 Mid-Term Exams week 9 Trees and its implementation 10 Heap tree usage and implementation 11 cancelled 12 depth first search and breadth first search 13 Huffman Coding and lempelziv","title":"Curriculum"},{"location":"second_year/Discrete%20struture/readme/","text":"discrete-structure Summary Discrete structure is a lesson in the computer engineering at university . In tihs Repository I will write the Topics that covered at the lesson share home works and lab projects. basic information Course book : Discrete Mathematics and Its Applications. publisher : MC Graw hill. Auther :Kenneth H. Rosen. Outline week topic Extra 1 Propositional Logic , Applications of Propositional Logic 2 Propositional Equivalences , Predicates and Quantifiers 3 Nested Quantifiers , Rules of Inference 4 Introduction to Proofs , Proof Methods and Strategy 5 Basic Structures: Sets, Functions and Sequences 6 Basic Structures: Functions, Sums, and Matrices 7 Algorithms 8 Mid-Term Exams week 9 Cryptography and number theory 10 Cryptography and number theory 11 induction and recursion 12 counting 13 counting and graph","title":"Discrete struture"},{"location":"second_year/Discrete%20struture/readme/#discrete-structure","text":"","title":"discrete-structure"},{"location":"second_year/Discrete%20struture/readme/#summary","text":"Discrete structure is a lesson in the computer engineering at university . In tihs Repository I will write the Topics that covered at the lesson share home works and lab projects.","title":"Summary"},{"location":"second_year/Discrete%20struture/readme/#basic-information","text":"Course book : Discrete Mathematics and Its Applications. publisher : MC Graw hill. Auther :Kenneth H. Rosen.","title":"basic information"},{"location":"second_year/Discrete%20struture/readme/#outline","text":"week topic Extra 1 Propositional Logic , Applications of Propositional Logic 2 Propositional Equivalences , Predicates and Quantifiers 3 Nested Quantifiers , Rules of Inference 4 Introduction to Proofs , Proof Methods and Strategy 5 Basic Structures: Sets, Functions and Sequences 6 Basic Structures: Functions, Sums, and Matrices 7 Algorithms 8 Mid-Term Exams week 9 Cryptography and number theory 10 Cryptography and number theory 11 induction and recursion 12 counting 13 counting and graph","title":"Outline"},{"location":"third_year/Advanced_programming/","text":"Advanced Programming Techniques information professor: Mehmet Akif Eyler (E\u011fler) Repository : weekly work & term project Examples : sample JavaScript pages Eloquent JavaScript : our textbook Outline : weekly planning of the course Tools: Chrome , git , GitHub , GitKraken Curriculum Week Topic Chap API 1 Numbers and Strings 1, 2 String 2 Arrays and Functions 3 Array 3 Objects \u2013 Inspector 4 Object 4 Keyed Collections 6 Set & Map 5 Fetching Remote Files 11 Promise 6 Reading Local Files 11 File 7 Midterm 8 CSS Animations 14 Animation 9 Document Object Model 14 DOM 10 Drawing on Canvas 17 Canvas 11 Image Processing Transform 12 Pixel Art Editor 19 ImageData 13 External API: Maps Google Maps 14 Term Project 15 Final Grading Name Ratio Midterm 20 Quiz 10 4xHW 10 10xCW 10 Project 15 Final 35","title":"Advanced programming"},{"location":"third_year/Advanced_programming/#advanced-programming-techniques","text":"","title":"Advanced Programming Techniques"},{"location":"third_year/Advanced_programming/#information","text":"professor: Mehmet Akif Eyler (E\u011fler) Repository : weekly work & term project Examples : sample JavaScript pages Eloquent JavaScript : our textbook Outline : weekly planning of the course Tools: Chrome , git , GitHub , GitKraken","title":"information"},{"location":"third_year/Advanced_programming/#curriculum","text":"Week Topic Chap API 1 Numbers and Strings 1, 2 String 2 Arrays and Functions 3 Array 3 Objects \u2013 Inspector 4 Object 4 Keyed Collections 6 Set & Map 5 Fetching Remote Files 11 Promise 6 Reading Local Files 11 File 7 Midterm 8 CSS Animations 14 Animation 9 Document Object Model 14 DOM 10 Drawing on Canvas 17 Canvas 11 Image Processing Transform 12 Pixel Art Editor 19 ImageData 13 External API: Maps Google Maps 14 Term Project 15 Final","title":"Curriculum"},{"location":"third_year/Advanced_programming/#grading","text":"Name Ratio Midterm 20 Quiz 10 4xHW 10 10xCW 10 Project 15 Final 35","title":"Grading"},{"location":"third_year/Automata/","text":"Formal Languages and Automata Theory professor: Mehmet Akif Eyler (E\u011fler) book : Introduction to Automata Theory, Languages, and Computation Auther :Hopcroft, Motwani, Ullman. week topic Extra 1 Languages and Automata 2 Finite Automata 3 Non-deterministic Finite Automata 4 Regular Expressions 5 Regular Languages & Properties 6 Context-Free Languages -- Quiz 7 Pushdown Automata 8 (midterm) 9 Toy language: microJ 10 Turing Machines 11 Decision Problems: P and NP 12 Easy Problems in Graph Theory 13 Hard Problems in Graph Theory","title":"Formal Languages and Automata Theory"},{"location":"third_year/Automata/#formal-languages-and-automata-theory","text":"professor: Mehmet Akif Eyler (E\u011fler) book : Introduction to Automata Theory, Languages, and Computation Auther :Hopcroft, Motwani, Ullman. week topic Extra 1 Languages and Automata 2 Finite Automata 3 Non-deterministic Finite Automata 4 Regular Expressions 5 Regular Languages & Properties 6 Context-Free Languages -- Quiz 7 Pushdown Automata 8 (midterm) 9 Toy language: microJ 10 Turing Machines 11 Decision Problems: P and NP 12 Easy Problems in Graph Theory 13 Hard Problems in Graph Theory","title":"Formal Languages and Automata Theory"}]}